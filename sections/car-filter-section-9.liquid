<section class="car-filter-search">
  <div class="filters">
    <select id="makeFilter">
      <option value="">All Makes</option>
      <option value="Mercedes">Mercedes</option>
      <option value="Toyota">Toyota</option>
      <option value="Renault">Renault</option>
    </select>
    <select id="yearFilter">
      <option value="">All Years</option>
      <option value="2023">2023</option>
      <option value="2022">2022</option>
    </select>
    <select id="modelFilter">
      <option value="Corolla">Corolla</option>
      <option value="Astra">Astra</option>
      <option value="206">206</option>
    </select>
  </div>
  <div class="product-list"></div>
</section>

<script>
  const carFilterSearch = {
    init: function() {
      this.getProducts(this.renderProducts);
      this.getMakeOptions();
    },

    getProducts: function(callback) {
      fetch('/products.json')
        .then(response => response.json())
        .then(callback);
    },

    renderProducts: function(products) {
      const productList = document.querySelector('.product-list');
      let html = '';

      products.forEach(function(product) {
        let productHtml = `
          <div class="product-item">
            <h4>${product.title}</h4>
            <p>${product.tags}</p>
          </div>
        `;

        html += productHtml;
      });

      productList.innerHTML = html;
    },

    getMakeOptions: function() {
      const makeFilter = document.querySelector('#makeFilter');

      fetch('/products.json')
        .then(response => response.json())
        .then(function(products) {
          let optionsHtml = '<option value="">All Makes</option>';

          products.forEach(function(product) {
            let makeTag = carFilterSearch.getTagValue(product, '{{ section.settings.make_tag }}');

            if (optionsHtml.indexOf(makeTag) === -1) {
              optionsHtml += `<option value="${makeTag}">${makeTag}</option>`;
            }
          });

          makeFilter.innerHTML = optionsHtml;
        });
    },

    filterProducts: function() {
      const makeFilter = document.querySelector('#makeFilter');
      const yearFilter = document.querySelector('#yearFilter');
      const modelFilter = document.querySelector('#modelFilter');
      const makeTag = '{{ section.settings.make_tag }}';
      const yearTag = '{{ section.settings.year_tag }}';
      const modelTag = '{{ section.settings.model_tag }}';

      fetch('/products.json')
        .then(response => response.json())
        .then(function(products) {
          let filteredProducts = products;
          let makeValue = makeFilter.value;
          let yearValue = yearFilter.value;
          let modelValue = modelFilter.value;

          if (makeValue !== '') {
            filteredProducts = filteredProducts.filter(function(product) {
              let productMake = carFilterSearch.getTagValue(product, makeTag);
              return productMake === makeValue;
            });
          }

          if (yearValue !== '') {
            filteredProducts = filteredProducts.filter(function(product) {
              let productYear = carFilterSearch.getTagValue(product, yearTag);
              return productYear === yearValue;
            });
          }

          if (modelValue !== '') {
            filteredProducts = filteredProducts.filter(function(product) {
              let productModel = carFilterSearch.getTagValue(product, modelTag);
              return productModel === modelValue;
            });
          }

          carFilterSearch.renderProducts(filteredProducts);
        });
    },

    getTagValue: function(product, tag) {
      const tags = product.tags.split(',');

      for (let i = 0; i < tags.length; i++) {
        if (tags[i].startsWith(tag)) {
          return tags[i].split(':')[1].trim();
        }
      }

      return '';
    }
  };

  document.addEventListener('DOMContentLoaded', function() {
    carFilterSearch.init();

    const makeFilter = document.querySelector('#makeFilter');
    const yearFilter = document.querySelector('#yearFilter');
    const modelFilter = document.querySelector('#modelFilter');

    makeFilter.addEventListener('change', carFilterSearch.filterProducts);
    yearFilter.addEventListener('change', carFilterSearch.filterProducts);
    modelFilter.addEventListener('change', carFilterSearch.filterProducts);
  });
</script>

{% schema %}
{
  "name": "Car advance filter 5",
  "settings": [
    {
      "type": "header",
      "content": "Car Filter Search Settings"
    },
    {
      "type": "text",
      "id": "make_tag",
      "label": "Make Tag",
      "default": "make"
    },
    {
      "type": "text",
      "id": "year_tag",
      "label": "Year Tag",
      "default": "year"
    },
    {
      "type": "text",
      "id": "model_tag",
      "label": "Model Tag",
      "default": "model"
    }
  ],
  "presets": [
    {
      "name": "Car advance filter 5"
    }
  ]
}
{% endschema %}
